$star-size: 20px;
$color: rgb(251, 235, 60);


@mixin set-star($border: $color, $fill: transparent) {
  background: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath fill='#{$fill}' stroke='#{$border}' stroke-width='38' d='M259.216 29.942L330.27 173.92l158.89 23.087L374.185 309.08l27.145 158.23-142.114-74.698-142.112 74.698 27.146-158.23L29.274 197.007l158.89-23.088z' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E");

}

.stars input {
  position: absolute;
  clip: rect(0, 0, 0, 0);
}

.stars label {
  box-sizing: border-box;
  display: inline-block;
  margin-right: 6px;
  height: $star-size ;
  width: $star-size ;
  @include set-star;
  font-size: 0;
  cursor: pointer;
}

.star {

  margin: 2.2%;
  padding: 1%;
  height: $star-size *0.65;
  width: $star-size *0.65;
  @include set-star($color, $color);
  font-size: 0;


}

.stars input:nth-child(1):checked~label:nth-of-type(-n + 1),
.stars input:nth-child(2):checked~label:nth-of-type(-n + 2),
.stars input:nth-child(3):checked~label:nth-of-type(-n + 3),
.stars input:nth-child(4):checked~label:nth-of-type(-n + 4),
.stars input:nth-child(5):checked~label:nth-of-type(-n + 5) {
  @include set-star($color, $color);
}


.sort {
  background-color: transparent;
  border: none;

  &:active .arrow {

    border: solid rgb(105, 105, 105);
    border-width: 0 3px 3px 0;
    display: inline-block;
    padding: 3px;
  }

  .arrow {

    border: solid rgb(255, 255, 255);
    border-width: 0 1.5px 1.5px 0;
    display: inline-block;
    padding: 3px;

  }

  .down {
    transform: rotate(45deg);
    -webkit-transform: rotate(45deg);
  }

  .up {
    transform: rotate(-135deg);
    -webkit-transform: rotate(-135deg);
  }
}